plugins {
	id 'maven-publish'
	alias libs.plugins.cursegradle
	alias libs.plugins.minotaur
}

apply plugin: 'org.quiltmc.loom'

base.archivesName = "${artifact_id}-quilt-${libs.versions.minecraft.get()}"

configurations {
	testCompileClasspath.extendsFrom(compileClasspath)
}

dependencies {
	minecraft libs.minecraft
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-${libs.versions.parchment.minecraft.get()}:${libs.versions.parchment.mappings.get()}@zip")
	}
	modImplementation libs.quilt.loader

	modImplementation libs.qfapi

	implementation project(":Common")

	compileOnly libs.autoservice
	annotationProcessor libs.autoservice

	modImplementation libs.dynassetgen.quilt
	modImplementation libs.defaultresources.quilt

	include libs.defaultresources.quilt

	include libs.nightconfig.core
	include libs.nightconfig.toml
	include libs.jankson
}

loom {
	runs {
		client {
			client()
			setConfigName("Quilt Client")
			ideConfigGenerated(true)
			runDir("run")
		}
		server {
			server()
			setConfigName("Quilt Server")
			ideConfigGenerated(true)
			runDir("runserver")
		}
	}

	mixin {
		defaultRefmapName = "excavated_variants.refmap.json"
	}
}

processResources {
    from project(":Common").sourceSets.main.resources
	inputs.property "version", project.version

	filesMatching("quilt.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

jar {
	from("LICENSE") {
		rename { "${it}_${mod_name}"}
	}
}

tasks.jar.finalizedBy(tasks.remapJar)

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId base.archivesName.get()
            version project.version
            from components.java
        }
    }

    repositories {
    }
}

// Publishing

if (System.getenv('CURSEFORGE_KEY')) {
	curseforge {
		apiKey = System.getenv('CURSEFORGE_KEY')
		project {
			id = '577411'
			releaseType = "${project.release_type}"
			addGameVersion "${libs.versions.minecraft.get()}"
			addGameVersion 'Quilt'
			mainArtifact(remapJar) {
				displayName = "Excavated Variants [Quilt] v$project.version"
			}
			relations {
				requiredDependency 'dynamic-asset-generator'
				requiredDependency 'qsl'
			}
		}
		options {
			forgeGradleIntegration = true
		}
	}
}

if (System.getenv('MODRINTH_KEY')) {
	modrinth {
		token = System.getenv('MODRINTH_KEY')
		projectId = 'IZaMGxb0'
		versionNumber = "$project.version"
		versionType = "${project.release_type}"
		detectLoaders = false
		uploadFile = remapJar
		gameVersions = ["${libs.versions.minecraft.get()}"]
		loaders = ['quilt']
		dependencies {
			required.project 'dynamic_asset_generator'
			required.project 'qsl'
		}
	}
}
